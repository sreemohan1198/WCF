//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IISHotClient.IISServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dept", Namespace="http://schemas.datacontract.org/2004/07/EmpServiceLib")]
    [System.SerializableAttribute()]
    public partial class Dept : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DEPTNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LOCField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DEPTNO {
            get {
                return this.DEPTNOField;
            }
            set {
                if ((this.DEPTNOField.Equals(value) != true)) {
                    this.DEPTNOField = value;
                    this.RaisePropertyChanged("DEPTNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNAME {
            get {
                return this.DNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.DNAMEField, value) != true)) {
                    this.DNAMEField = value;
                    this.RaisePropertyChanged("DNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LOC {
            get {
                return this.LOCField;
            }
            set {
                if ((object.ReferenceEquals(this.LOCField, value) != true)) {
                    this.LOCField = value;
                    this.RaisePropertyChanged("LOC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IISServiceReference.IDept")]
    public interface IDept {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDept/GetDepartments", ReplyAction="http://tempuri.org/IDept/GetDepartmentsResponse")]
        IISHotClient.IISServiceReference.Dept[] GetDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDept/GetDepartments", ReplyAction="http://tempuri.org/IDept/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<IISHotClient.IISServiceReference.Dept[]> GetDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDept/AddDepartment", ReplyAction="http://tempuri.org/IDept/AddDepartmentResponse")]
        string AddDepartment(IISHotClient.IISServiceReference.Dept dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDept/AddDepartment", ReplyAction="http://tempuri.org/IDept/AddDepartmentResponse")]
        System.Threading.Tasks.Task<string> AddDepartmentAsync(IISHotClient.IISServiceReference.Dept dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDept/UpdateDepartment", ReplyAction="http://tempuri.org/IDept/UpdateDepartmentResponse")]
        string UpdateDepartment(IISHotClient.IISServiceReference.Dept dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDept/UpdateDepartment", ReplyAction="http://tempuri.org/IDept/UpdateDepartmentResponse")]
        System.Threading.Tasks.Task<string> UpdateDepartmentAsync(IISHotClient.IISServiceReference.Dept dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDept/DeleteDepartment", ReplyAction="http://tempuri.org/IDept/DeleteDepartmentResponse")]
        string DeleteDepartment(IISHotClient.IISServiceReference.Dept dept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDept/DeleteDepartment", ReplyAction="http://tempuri.org/IDept/DeleteDepartmentResponse")]
        System.Threading.Tasks.Task<string> DeleteDepartmentAsync(IISHotClient.IISServiceReference.Dept dept);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeptChannel : IISHotClient.IISServiceReference.IDept, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeptClient : System.ServiceModel.ClientBase<IISHotClient.IISServiceReference.IDept>, IISHotClient.IISServiceReference.IDept {
        
        public DeptClient() {
        }
        
        public DeptClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeptClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeptClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeptClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IISHotClient.IISServiceReference.Dept[] GetDepartments() {
            return base.Channel.GetDepartments();
        }
        
        public System.Threading.Tasks.Task<IISHotClient.IISServiceReference.Dept[]> GetDepartmentsAsync() {
            return base.Channel.GetDepartmentsAsync();
        }
        
        public string AddDepartment(IISHotClient.IISServiceReference.Dept dept) {
            return base.Channel.AddDepartment(dept);
        }
        
        public System.Threading.Tasks.Task<string> AddDepartmentAsync(IISHotClient.IISServiceReference.Dept dept) {
            return base.Channel.AddDepartmentAsync(dept);
        }
        
        public string UpdateDepartment(IISHotClient.IISServiceReference.Dept dept) {
            return base.Channel.UpdateDepartment(dept);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDepartmentAsync(IISHotClient.IISServiceReference.Dept dept) {
            return base.Channel.UpdateDepartmentAsync(dept);
        }
        
        public string DeleteDepartment(IISHotClient.IISServiceReference.Dept dept) {
            return base.Channel.DeleteDepartment(dept);
        }
        
        public System.Threading.Tasks.Task<string> DeleteDepartmentAsync(IISHotClient.IISServiceReference.Dept dept) {
            return base.Channel.DeleteDepartmentAsync(dept);
        }
    }
}
